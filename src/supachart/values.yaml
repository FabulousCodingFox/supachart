# Default values for supachart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

emptySecretRef: &emptySecretRef
  name: ""
  key: ""

# ==============================================================================
# Shared Configuration
# ==============================================================================

nameOverride: ""
fullnameOverride: ""

shared:
  # Secrets
  anon_key:
    value: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE"
    secretKeyReference: *emptySecretRef
  service_role_key:
    value: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q"
    secretKeyReference: *emptySecretRef
  public_url:
    value: "http://localhost:8000"
    secretKeyReference: *emptySecretRef
  site_url:
    value: "http://localhost:3000"
    secretKeyReference: *emptySecretRef
  additional_redirect_urls:
    value: ""
    secretKeyReference: *emptySecretRef
  secret_key_base:
    value: "UpNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZv1/u2oq"
    secretKeyReference: *emptySecretRef
  vault_enc_key:
    value: "your-encryption-key-32-chars-min"
    secretKeyReference: *emptySecretRef

# ==============================================================================
# Database Configuration
# ==============================================================================

db:
  # General configuration
  nameOverride: ""
  fullnameOverride: ""

  # Secrets
  password:
    value: "your-super-secret-and-long-postgres-password"
    secretKeyReference: *emptySecretRef
  database:
    value: "postgres"
    secretKeyReference: *emptySecretRef

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP
    port: 5432

  # Deployment
  deployment:
    image: "supabase/postgres:15.8.1.060"
    imagePullPolicy: IfNotPresent
    annotations: {}
    securityContext: {}

  # Database Persistence
  persistence:
    storageClass: "standard"
    size: "8Gi"

# ==============================================================================
# Auth Configuration
# ==============================================================================

auth:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Secrets
  jwt:
    secret:
      value: "your-super-secret-jwt-token-with-at-least-32-characters-long"
      secretKeyReference: *emptySecretRef
    expiry:
      value: "3600"
      secretKeyReference: *emptySecretRef
  settings:
    disable_signup:
      value: "false"
      secretKeyReference: *emptySecretRef
    enable_anonymous_users:
      value: "false"
      secretKeyReference: *emptySecretRef
    phone:
      enable_signup: 
        value: "true"
        secretKeyReference: *emptySecretRef
      enable_autoconfirm: 
        value: "true"
        secretKeyReference: *emptySecretRef
    email:
      enable_signup: 
        value: "true"
        secretKeyReference: *emptySecretRef
      enable_autoconfirm: 
        value: "true"
        secretKeyReference: *emptySecretRef
      admin_email:
        value: "admin@example.com"
        secretKeyReference: *emptySecretRef
      host: 
        value: "supabase-mail"
        secretKeyReference: *emptySecretRef
      port:
        value: "2500"
        secretKeyReference: *emptySecretRef
      user:
        value: "fake_mail_user"
        secretKeyReference: *emptySecretRef
      password:
        value: "fake_mail_password"
        secretKeyReference: *emptySecretRef
      sender_name:
        value: "fake_sender"
        secretKeyReference: *emptySecretRef
    mailer:
      urlpaths:
        invite:
          value: "/auth/v1/verify"
          secretKeyReference: *emptySecretRef
        confirmation:
          value: "/auth/v1/verify"
          secretKeyReference: *emptySecretRef
        recovery:
          value: "/auth/v1/verify"
          secretKeyReference: *emptySecretRef
        email_change:
          value: "/auth/v1/verify"
          secretKeyReference: *emptySecretRef
  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP
    port: 9999
  
  # Deployment
  deployment:
    image: "supabase/gotrue:v2.177.0"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}

# ==============================================================================
# Studio Configuration
# ==============================================================================

studio:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Secrets
  dashboard:
    username:
      value: "supabase"
      secretKeyReference: *emptySecretRef
    password:
      value: "this_password_is_insecure_and_should_be_updated"
      secretKeyReference: *emptySecretRef
  defaultOrganization:
    value: "Default Organization"
    secretKeyReference: *emptySecretRef
  defaultProject:
    value: "Default Project"
    secretKeyReference: *emptySecretRef
  openai:
    apiKey:
      value: ""
      secretKeyReference: *emptySecretRef

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP
    port: 3000
  
  # Deployment
  deployment:
    image: "supabase/studio:2025.06.30-sha-6f5982d"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}

# ==============================================================================
# Pg-Meta Configuration
# ==============================================================================

meta:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP
    port: 8080

  # Deployment
  deployment:
    image: "supabase/postgres-meta:v0.91.0"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}

# ==============================================================================
# Kong Configuration
# ==============================================================================

kong:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP
    port: 8000

  # Deployment
  deployment:
    image: "kong:2.8.1"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}

# ==============================================================================
# Functions Configuration
# ==============================================================================

functions:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Secrets
  verify_jwt: 
    value: "false"
    secretKeyReference: *emptySecretRef

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP
    port: 9000

  # Deployment
  deployment:
    image: "supabase/edge-runtime:v1.67.4"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}

  # Storage
  storage:
    configmap:
      enabled: false
      #files:
      #  - name: helloworld.ts
      #    content: |
      #      export default (req, res) => {
      #        res.send("Hello from Supabase Functions!");
      #      }

# ==============================================================================
# Analytics Configuration
# ==============================================================================

analytics:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP
    port: 4000

  # Deployment
  deployment:
    image: "supabase/logflare:1.14.2"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}

  access_token:
    public:
      value: "your-super-secret-and-long-logflare-key-public"
      secretKeyReference: *emptySecretRef
    private:
      value: "your-super-secret-and-long-logflare-key-private"
      secretKeyReference: *emptySecretRef

# ==============================================================================
# Vector Configuration
# ==============================================================================

vector:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP
    port: 9001

  # Deployment
  deployment:
    image: "timberio/vector:0.28.1-alpine"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}

# ==============================================================================
# Rest Configuration
# ==============================================================================

rest:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP
    port: 3000

  # Deployment
  deployment:
    image: "postgrest/postgrest:v12.2.12"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}
  
  schemas:
    value: "public,storage,graphql_public"
    secretKeyReference: *emptySecretRef

# ==============================================================================
# Realtime Configuration
# ==============================================================================

realtime:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP
    port: 4000

  # Deployment
  deployment:
    image: "supabase/realtime:v2.34.47"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}

# ==============================================================================
# Imgproxy Configuration
# ==============================================================================

imgproxy:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP
    port: 5001

  # Deployment
  deployment:
    image: "darthsim/imgproxy:v3.8.0"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}

  webp_detection:
    value: true
    secretKeyReference: *emptySecretRef

# ==============================================================================
# Supavisor Configuration
# ==============================================================================

supavisor:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    type: ClusterIP

  # Deployment
  deployment:
    image: "supabase/supavisor:2.5.7"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}

  tenant_id:
    value: "your-tenant-id"
    secretKeyReference: *emptySecretRef

  default_pool_size:
    value: 20
    secretKeyReference: *emptySecretRef

  max_pool_client_connections:
    value: 100
    secretKeyReference: *emptySecretRef

  db_pool_size:
    value: 5
    secretKeyReference: *emptySecretRef

# ==============================================================================
# Storage Configuration
# ==============================================================================

storage:
  # General configuration
  enabled: true
  nameOverride: ""
  fullnameOverride: ""

  # Service Account
  serviceAccount:
    enabled: true
    name: ""
    annotations: {}

  # Service
  service:
    port: 5000
    type: ClusterIP

  # Deployment
  deployment:
    image: "supabase/storage-api:v1.25.7"
    imagePullPolicy: IfNotPresent
    replicas: 1
    annotations: {}
    securityContext: {}

  volume:
    enabled: true
    persistence:
      storageClass: "standard"
      size: "16Gi"
    
  s3:
    enabled: false
    endpoint:
      value: "http://minio:9000"
      secretKeyReference: *emptySecretRef
    protocol:
      value: "http"
      secretKeyReference: *emptySecretRef
    access_key:
      id:
        value: "supa-storage"
        secretKeyReference: *emptySecretRef
      secret:
        value: "secret1234"
        secretKeyReference: *emptySecretRef
